//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DragTriggerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DragTrigger), typeof(TouchTrigger));
		L.RegFunction("setLuaCallback", setLuaCallback);
		L.RegFunction("OnBeginDrag", OnBeginDrag);
		L.RegFunction("OnDrag", OnDrag);
		L.RegFunction("OnEndDrag", OnEndDrag);
		L.RegFunction("OnDestory", OnDestory);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setLuaCallback(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				DragTrigger obj = (DragTrigger)ToLua.CheckObject<DragTrigger>(L, 1);
				LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				obj.setLuaCallback(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				DragTrigger obj = (DragTrigger)ToLua.CheckObject<DragTrigger>(L, 1);
				LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				obj.setLuaCallback(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				DragTrigger obj = (DragTrigger)ToLua.CheckObject<DragTrigger>(L, 1);
				LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
				obj.setLuaCallback(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 6)
			{
				DragTrigger obj = (DragTrigger)ToLua.CheckObject<DragTrigger>(L, 1);
				LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
				LuaFunction arg4 = ToLua.CheckLuaFunction(L, 6);
				obj.setLuaCallback(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 7)
			{
				DragTrigger obj = (DragTrigger)ToLua.CheckObject<DragTrigger>(L, 1);
				LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
				LuaFunction arg4 = ToLua.CheckLuaFunction(L, 6);
				LuaFunction arg5 = ToLua.CheckLuaFunction(L, 7);
				obj.setLuaCallback(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 8)
			{
				DragTrigger obj = (DragTrigger)ToLua.CheckObject<DragTrigger>(L, 1);
				LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
				LuaFunction arg4 = ToLua.CheckLuaFunction(L, 6);
				LuaFunction arg5 = ToLua.CheckLuaFunction(L, 7);
				LuaFunction arg6 = ToLua.CheckLuaFunction(L, 8);
				obj.setLuaCallback(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: DragTrigger.setLuaCallback");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBeginDrag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragTrigger obj = (DragTrigger)ToLua.CheckObject<DragTrigger>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnBeginDrag(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDrag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragTrigger obj = (DragTrigger)ToLua.CheckObject<DragTrigger>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnDrag(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEndDrag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragTrigger obj = (DragTrigger)ToLua.CheckObject<DragTrigger>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnEndDrag(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDestory(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DragTrigger obj = (DragTrigger)ToLua.CheckObject<DragTrigger>(L, 1);
			obj.OnDestory();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

